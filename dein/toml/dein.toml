[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depend = ['neomru.vim', 'neoyank.vim']
hook_add = '''
    " recently used files list
    noremap <silent> <space>s :<C-u>Denite file_mru<CR>
    " current directory
    noremap <silent> <space>a :<C-u>Denite file_rec<CR>
    " yank history
    noremap <silent> <C-s> :<C-u>Denite neoyank<CR>
    " denite associate to search
    nnoremap <silent> / :<C-u>Denite -buffer-name=search -auto-resize line<CR>
    call denite#custom#map('insert', "<C-n>", "<denite:move_to_next_line>")
    call denite#custom#map('insert', "<C-k>", "<denite:move_to_previous_line>")
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
    let g:indentLine_color_term = 111
    let g:indentLine_color_gui = '#708090'
    let g:indentLine_char = '|'
'''

[[plugins]]
repo = 'bling/vim-airline'
hook_add = '''
    let g:airline_enable_branch = 0
    let g:airline_section_b = "%t %M"
    let g:airline_section_c = ''
    let s:sep = " %{get(g:, 'airline_right_alt_sep', '')} "
    let g:airline_section_x =
    \ "%{strlen(&fileformat)?&fileformat:''}".s:sep.
    \ "%{strlen(&fenc)?&fenc:&enc}".s:sep.
    \ "%{strlen(&filetype)?&filetype:'no ft'}"
    let g:airline_section_y = '%3p%%'
    let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%3l:%-2v'
    let g:airline#extensions#whitespace#enabled = 0
    " apply airline to tablines
    let g:airline#extensions#tabline#enabled = 1
    " when there is only one tab, Turn off the function to display the list of buffers on tablines
    let g:airline#extensions#tabline#show_buffers = 0
    " 0, the number of open windows on that tab, 1 means the number of consecutive numbers from the left tab
    let g:airline#extensions#tabline#tab_nr_type = 1
    " display name in tablines
    let g:airline#extensions#tabline#fnamemod = ':t'
'''

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_post_update = '''
    noremap mh :GitGutterNextHunk<CR>
    noremap mH :GitGutterPrevHunk<CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    " make the update timing faster. defalult 4000ms
    set updatetime=250
    " anti alias
    set signcolumn=yes
    " Gstatus
    noremap gs :Gstatus<CR>
    " Gdiff
    noremap gf :Gdiff<CR>
    " Gpush
    " TODO 現在の状態を取得してそこをデフォルトに
    noremap gp :Git push origin
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-scripts/vim-auto-save'
hook_add = '''
    let g:auto_save = 1
'''

[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
    vmap v <Plug>(expand_region_expand)
    vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'jacquesbh/vim-showmarks'
hook_add = '''
    augroup vimrc-showmarks
      autocmd!
      " autocmd VimEnter * DoShowMarks
      autocmd VimLeavePre * delmarks!
    augroup END
    noremap <silent> <space>m :10PreviewMarks<CR>
'''

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
depend = ['kana/vim-operator-user']
hook_add = '''
    map R  <Plug>(operator-replace)
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
    let g:EasyMotion_do_mapping = 0
    map f <Plug>(easymotion-fl)
    map t <Plug>(easymotion-tl)
    map F <Plug>(easymotion-Fl)
    map T <Plug>(easymotion-Tl)
    map <space>f <Plug>(easymotion-s2)
'''
